[[Managing repository With SVNKit|List]] | [[Printing Out File Contents|>>]]
<br />
<br />

== Printing out a Subversion repository tree ==
The first thing we will try - observing a Subversion repository. First we need to set up the library to use the 
protocol which we would like to access a repository through. In this example we will use the ''http:// '' protocol 
to observe a world-readable repository: 
<java>
import org.tmatesoft.svn.core.internal.io.dav.DAVRepositoryFactory;
...

public class DisplayRepositoryTree {
    public static void main(String[] args) {
        DAVRepositoryFactory.setup();
        ...
</java>
We need a URL of the repository and credentials (here we use some dummy ones since we think an Apache will let us 
read repository contents, but you may change them to some valid credentials to observe repositories closed to 
unregistered persons). Having these parameters we create an '''SVNRepository''' driver for the selected location:
<java>
        ...
        String url = "http://svn.tmate.org:8080/svn/jsvn/trunk/doc";
        String name = "anonymous";
        String password = "anonymous";
        
        SVNRepository repository = null;
        try {
            repository = SVNRepositoryFactory.create(SVNURL.parseURIDecoded(url));
            ISVNAuthenticationManager authManager = SVNWCUtil.createDefaultAuthenticationManager(name, password);
            repository.setAuthenticationManager(authManager);
            ...
</java>
We have got a repository access driver with a default authentication manager. Let's print out 
some information identifying the repository itself - its root location path and UUID:
<java>
            ...
            System.out.println("Repository Root: " + repository.getRepositoryRoot(true));
            System.out.println("Repository UUID: " + repository.getRepositoryUUID(true));
            ...
</java>
If everything is Ok (we connected to our repository successfully and cached its UUID and root location), we are moving 
further. Now we will check whether the url we are going to use corresponds to a directory. If it does not, we are 
finished.
<java>
            ...
            SVNNodeKind nodeKind = repository.checkPath("", -1);
            if (nodeKind == SVNNodeKind.NONE) {
                System.err.println("There is no entry at '" + url + "'.");
                System.exit(1);
            } else if (nodeKind == SVNNodeKind.FILE) {
                System.err.println("The entry at '" + url + "' is a file while a directory was expected.");
                System.exit(1);
            }
            ...
</java>
Repository nodes are represented by [http://tmate.org/svn/kb/javadoc/org/tmatesoft/svn/core/SVNNodeKind.html SVNNodeKind] 
enum objects. Here and later we use an invalid revision number -1 to mean that the latest revision must be used. The 
next step - writing a function which will recursively call itself to traverse the repository tree starting at a 
particular path (parameter) and print out all contents:
<java>
    public static void listEntries(SVNRepository repository, String path) throws SVNException {
        Collection entries = repository.getDir(path, -1, null, (Collection) null);
        Iterator iterator = entries.iterator();
        while (iterator.hasNext()) {
            SVNDirEntry entry = (SVNDirEntry) iterator.next();
            System.out.println("/" + (path.equals("") ? "" : path + "/") + entry.getName() + 
                               " (author: '" + entry.getAuthor() + "'; revision: " + entry.getRevision() + 
                               "; date: " + entry.getDate() + ")");
            if (entry.getKind() == SVNNodeKind.DIR) {
                listEntries(repository, (path.equals("")) ? entry.getName() : path + "/" + entry.getName());
            }
        }
    }
</java>
This function receives a path of a repository subtree which is to be printed out. Using a <code>getDir(...)</code> method 
of the repository access driver passed it reads the contents of the current path which are represented by 
[http://tmate.org/svn/kb/javadoc/org/tmatesoft/svn/core/SVNDirEntry.html SVNDirEntry] objects. If an entry is a 
directory the function recursively calls itself with the path of that directory. And so on. Collected '''SVNDirEntry''' 
objects contain such information as the last change revision, author, and date-stamp. 

<p>
From our <code>main()</code> program we call <code>listEntries()</code> passing our driver object and the current path 
that the driver is bound to:
<java>
            ...
            listEntries(repository, "");
            ...
</java>
At the end of the program we can finish with printing the latest revision of our repository:
<java>
            ...
            latestRevision = repository.getLatestRevision();
            System.out.println("Repository latest revision: " + latestRevision);
            ...
        } catch (SVNException svne) {
            //handle exception
        }
    }
}
</java>
And finally we run the program and have the following output in our console:

 /javadoc-files (author: 'sa'; revision: 1985; date: Sat Jan 14 23:04:00 NOVT 2006)
 /javadoc-files/overview.html (author: 'sa'; revision: 1985; date: Sat Jan 14 23:04:00 NOVT 2006)
 /javadoc-files/info.png (author: 'sa'; revision: 1287; date: Mon Aug 08 18:27:37 NOVST 2005)
 /javadoc-files/javadoc.css (author: 'sa'; revision: 1294; date: Tue Aug 09 02:46:29 NOVST 2005)
 /javadoc-files/SVNKit_API_Packages.jpg (author: 'sa'; revision: 1027; date: Fri Jul 08 22:33:09 NOVST 2005)
 /examples (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)
 /examples/svnkit-examples.iml (author: 'alex'; revision: 1012; date: Wed Jul 06 17:27:11 NOVST 2005)
 /examples/src (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)
 /examples/src/org (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)
 /examples/src/org/tmatesoft (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)
 /examples/src/org/tmatesoft/svn (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)
 /examples/src/org/tmatesoft/svn/examples (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)
 /examples/src/org/tmatesoft/svn/examples/wc (author: 'sa'; revision: 2408; date: Wed Apr 26 03:22:53 NOVST 2006)
 /examples/src/org/tmatesoft/svn/examples/wc/UpdateEventHandler.java (author: 'sa'; revision: 1987; date: Sun Jan 15 00:07:44 NOVT 2006)
 /examples/src/org/tmatesoft/svn/examples/wc/WCEventHandler.java (author: 'sa'; revision: 1987; date: Sun Jan 15 00:07:44 NOVT 2006)
 /examples/src/org/tmatesoft/svn/examples/wc/WorkingCopy.java (author: 'sa'; revision: 2408; date: Wed Apr 26 03:22:53 NOVST 2006)
 /examples/src/org/tmatesoft/svn/examples/wc/InfoHandler.java (author: 'sa'; revision: 1987; date: Sun Jan 15 00:07:44 NOVT 2006)
 /examples/src/org/tmatesoft/svn/examples/wc/CommitEventHandler.java (author: 'sa'; revision: 1987; date: Sun Jan 15 00:07:44 NOVT 2006)
 /examples/src/org/tmatesoft/svn/examples/wc/StatusHandler.java (author: 'sa'; revision: 1987; date: Sun Jan 15 00:07:44 NOVT 2006)
 /examples/src/org/tmatesoft/svn/examples/repository (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)
 /examples/src/org/tmatesoft/svn/examples/repository/Commit.java (author: 'sa'; revision: 2408; date: Wed Apr 26 03:22:53 NOVST 2006)
 /examples/src/org/tmatesoft/svn/examples/repository/DisplayFile.java (author: 'sa'; revision: 2408; date: Wed Apr 26 03:22:53 NOVST 2006)
 /examples/src/org/tmatesoft/svn/examples/repository/DisplayRepositoryTree.java (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)
 /examples/src/org/tmatesoft/svn/examples/repository/Replicate.java (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)
 /examples/src/org/tmatesoft/svn/examples/repository/History.java (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)
 /examples/src/org/tmatesoft/svn/examples/repository/Export.java (author: 'sa'; revision: 2412; date: Thu Apr 27 00:36:08 NOVST 2006)

 ---------------------------------------------
 Repository latest revision: 2505

----
Download the [http://svn.tmate.org/repos/jsvn/trunk/doc/examples/src/org/tmatesoft/svn/examples/repository/DisplayRepositoryTree.java example program source code].

<br />
<br />
[[Managing repository With SVNKit|List]] | [[Printing Out File Contents|>>]]
